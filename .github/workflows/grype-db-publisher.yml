name: Grype DB Mirror

on:
  workflow_dispatch:
  push:
    branches:
      - 'grype'
  schedule:
    - cron: '0 0 * * *'


permissions:
  contents: read
  discussions: read
  issues: read
  pull-requests: read
  id-token: write

env:
  AWS_ACCOUNT_ID: 418272760313
  REGION: us-east-1
  S3_GRYPE_DB_BUCKET_NAME: my-grype-databases
  S3_GRYPE_DB_BASE_URL: "https://my-grype-databases.s3.amazonaws.com/databases/"
  GRYPE_UPSTREAM_INDEX_URL: "https://toolbox-data.anchore.io/grype/databases/listing.json"

jobs:
  grype-db-mirror:
    name: grype-db-mirror
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: ./login-aws-cloud

      # TODO before merging this PR to PSA
      # For the final implementation following infra resources required to be created
      # A S3 bucket, replace the S3 bucket name in above ENVs S3_DB_BUCKET_NAME and S3_DB_BASE_URL
      # IAM role which has S3 put permissions to put db tar files and listing.json to the Bucket
      # Bucket permission should allow the IAM role:
      # to putObjects with a condition which only allows put from IAM role ARN
      # and public read for PSA to be able to read and download tar and index file.
      - name: download listing.json file from upstream
        id: listing-json
        run: |
          set -e
          curl -s -o listing.json ${{ env.GRYPE_UPSTREAM_INDEX_URL }}
          if [ ! -s listing.json ]; then
            echo "Error: listing.json file is empty or could not be downloaded"
            exit 1
          fi
          jq -r '.available[][] | .url' listing.json > urls.txt
          wget -i urls.txt -P databases || {
            echo "Error: Failed to download database files";
            exit 1;
          }

      - name: Upload the db tar containing directory to S3
        id: upload-to-s3
        run: |
          aws s3 cp databases s3://${{ env.S3_GRYPE_DB_BUCKET_NAME }}/databases/ --recursive

      - name: Craft Kong owned listing.json file
        id: craft-listing-json
        run: |
          set -e
          if [ ! -f listing.json ]; then
            echo "Error: listing.json file does not exist"
            exit 1
          fi
          jq 'walk(if type == "object" and .url then .url |= gsub("https://grype.anchore.io/databases/"; "${{ env.S3_GRYPE_DB_BASE_URL }}") else . end)' listing.json > kong-listing.json
          if [ ! -s kong-listing.json ]; then
            echo "Error: Failed to create kong-listing.json file"
            exit 1
          fi

      # Upload king-listing.json
      - name: Upload Kong-listing.json file to S3
        run: |
          aws s3 cp kong-listing.json s3://${{ env.S3_GRYPE_DB_BUCKET_NAME }}/listing.json
          
