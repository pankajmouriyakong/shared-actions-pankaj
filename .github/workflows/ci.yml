name: CI

on:
  pull_request:
    branches: [ independent-releases ]
  push:
    branches: [ independent-releases ]
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            scan-docker-image: 'security-actions/scan-docker-image/**'
            sca: 'security-actions/sca/**'
            scan-rust: 'security-actions/scan-rust/**'
            semgrep: 'security-actions/semgrep/**'
            sign-docker-image: 'security-actions/sign-docker-image/**'

  build:
    needs: [ changes ]
    if: ${{ needs.changes.outputs.packages != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.packages) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Node Version
        id: node-version
        run: |
          nodeVersion="$(node --version | grep -oE '[0-9]+' | head -n1)"
          echo "nodeVersion=$nodeVersion" >> $GITHUB_OUTPUT

      - name: Dependency Cache
        id: dependency-cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: pnpm-${{ steps.node-version.outputs.node-version }}-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install PNPM
        run: |
          npm i -g pnpm
          pnpm --version
          if [ -n "${{ github.head_ref }}" ]; then
            git checkout ${{ github.head_ref }}
          fi

      - name: Install Dependencies
        if: ${{ steps.dependency-cache.outputs.cache-hit != 'true' }}
        run: |
          pnpm install --frozen-lockfile

      - name: Commit lint
        uses: wagoid/commitlint-github-action@v5
        with:
          failOnWarnings: true

      - name: Run Tests
        run: |
          pnpm lint
          pnpm run package
