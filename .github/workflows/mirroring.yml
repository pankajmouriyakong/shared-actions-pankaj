name: Mirroring

on:
  workflow_dispatch: {}

permissions:
  contents: read
  discussions: read
  issues: read
  pull-requests: read
  id-token: write

env:
  AWS_ACCOUND_ID: 992382581569
  #KONG_ECR_URI: ${{ secrets.AWS_ACCOUND_ID }}.dkr.ecr.us-east-1.amazonaws.com
  REGION: us-east-1

jobs:
  metadata:
    name: Metadata
    runs-on: ubuntu-latest
    outputs:
      assets: ${{ steps.config.outputs.assets }}
    steps:
    - uses: actions/checkout@v3
    - name: Construct tooling matrix
      id: config
      run: |
        matrix_file=".github/dependencies.yml"
        assets=$(yq eval -o=json '.assets' $matrix_file)
        single_line_assets=$(echo "$assets" | tr -d '\n' | sed 's/  */ /g')
        echo "assets=${single_line_assets}" >> $GITHUB_OUTPUT

        # ASSETS_JSON=$(yq eval -o=json '.assets' $matrix_file | jq -c 'map({
        #   name: .name,
        #   tag: .tag,
        #   build_args: (
        #     .["build_args"] |
        #     map(to_entries | map("\(.key)=\(.value)") | join(" ")) | 
        #     join(" ")            
        #   )
        # })')
        # echo "ASSETS_JSON=$ASSETS_JSON"
        # MATRIX_JSON=$(echo "$ASSETS_JSON" | jq -rc '[.[] | {name: .name, tag: .tag, build_args: .build_args}]')
        # echo "MATRIX_JSON=$MATRIX_JSON"
        # echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT 
  
  # TODO: Enhance this job to run per asset frequency schedule
  build-publish-assets:
    runs-on: ubuntu-latest
    needs: metadata
    name: Build Asset - ${{ matrix.asset.name }}
    permissions:
      id-token: write
      contents: write

    strategy:
      fail-fast: false
      matrix:
        asset: ${{ fromJSON(needs.metadata.outputs.assets) }}
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    steps:
    - uses: actions/checkout@v4
    - name: Set Docker build args
      id: format_build_args
      run: |
        echo ${{matrix.asset.build_args}}
        build_args="${{ join(matrix.asset.build_args, ' ') }}"
        echo "Build args: $build_args"
        build_args_new=$(echo "${{ toJson(matrix.asset.build_args) }}" | jq -r 'map(to_entries | map("\(.key)=\(.value)") | join("=")) | join(" ")')
        echo "Build args New: $build_args_new"

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   id: creds
    #   with:
    #     aws-region: us-east-1
    #     role-to-assume: arn:aws:iam::992382581569:role/ecr-private-role-to-pull
    #     role-session-name: GitHub_to_AWS_via_FederatedOIDC

    # - name: Sts GetCallerIdentity
    #   shell: bash
    #   run: |
    #     aws sts get-caller-identity

    # - name: Login to ECR
    #   uses: docker/login-action@v3
    #   with:
    #     registry: 992382581569.dkr.ecr.us-east-1.amazonaws.com
    #     username: ${{ steps.creds.outputs.aws-access-key-id }}
    #     password: ${{ steps.creds.outputs.aws-secret-access-key }}

    # - name: Docker meta
    #   id: meta
    #   uses: docker/metadata-action@v5
    #   with:
    #     images: ${{ env.KONG_ECR_REGISTRY }}
    #     sep-tags: ","
    #     tags: |
    #       type=raw,${{ matrix.asset.tag }}
    #   env:
    #     KONG_ECR_REGISTRY: 992382581569.dkr.ecr.${{ env.REGION }}.amazonaws.com
    #  echo "${{ matrix.asset.build_args }}"
       

    # - name: Build Docker Image
    #   uses: docker/build-push-action@v5
    #   id: image
    #   with:
    #     file: security-actions/dockerfiles/${{ matrix.asset.name }}.Dockerfile
    #     context: .
    #     push: true
    #     pull: true
    #     tags: ${{ steps.meta.outputs.tags }}
    #     labels: ${{ steps.meta.outputs.labels }}
    #     # platforms: ${{ steps.docker_build_args.outputs.platforms }}
    #     build-args: ${{ fromJson(join(matrix.asset.build_args, ' ')) }}
    #     # these 2 options are needed so that the MediaType of the manifest is
    #     # OCI-compliant for other downstream integrations
    #     # see also:
    #     #   - https://github.com/docker/buildx/issues/1507
    #     #   - https://github.com/docker/buildx/issues/1509#issuecomment-1378538197
    #     provenance: false
    #     outputs: type=image,oci-mediatypes=true

