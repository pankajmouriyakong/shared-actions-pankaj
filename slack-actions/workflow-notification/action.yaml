name: Post Slack workflow conclusion notifications
description: Post a Slack message with the workflow conclusion via Slack incoming webhook.

inputs:
  # REQUIRED INPUTS
  slack-webhook-url:
    description: The Slack webhook URL.
    required: true
  status:
    description: The status of the workflow. One of 'success', 'failure', 'cancelled', or 'skipped'.
    required: false

  # OPTIONAL INPUTS
  payload:
    description: The Slack Block Kit JSON payload to send to Slack. If provided, this input will override all other inputs other than `slack-webhook-url`.
    required: false
    default: ''
  header:
    description: The notification header, as a plain text string. Defaults to the workflow name.
    required: false
  success-message:
    description: The message to display when the workflow is successful. Accepts markdown syntax.
    required: false
    default: ':large_green_circle: Workflow completed successfully :mario_luigi_dance:'
  failure-message:
    description: The message to display when the workflow fails. Accepts markdown syntax.
    required: false
    default: ':red_circle: Workflow failed :sad-panda:'
  cancelled-message:
    description: The message to display when the workflow is cancelled. Accepts markdown syntax.
    required: false
    default: ':black_circle: Workflow cancelled'
  skipped-message:
    description: The message to display when the workflow is skipped. Accepts markdown syntax.
    required: false
    default: ':white_circle: Workflow skipped'
  additional-blocks:
    description: |
      A JSON array of additional Slack blocks to append after the default blocks.
      Example: '[{ "type": "section", "fields": [ ... ] }, ...]'
    required: false
    default: ''


runs:
  using: composite
  steps:
    - name: Construct Slack variables
      id: slack-variables
      shell: bash
      run: |
        # Git Variables
        fallbackBranchName=$(echo "${{ github.ref }}" | cut -c12-)
        shortCommitHash=$(echo "${{ github.sha }}" | cut -c1-7)

        # Determine status message
        if [[ "${{ inputs.status }}" == 'success' ]]; then
          statusMessage="${{ inputs.success-message }}"
        elif [[ "${{ inputs.status }}" == 'failure' ]]; then
          statusMessage="${{ inputs.failure-message }}"
        elif [[ "${{ inputs.status }}" == 'cancelled' ]]; then
          statusMessage="${{ inputs.cancelled-message }}"
        elif [[ "${{ inputs.status }}" == 'skipped' ]]; then
          statusMessage="${{ inputs.skipped-message }}"
        else
          echo "Invalid workflow status: ${{ inputs.status }}"
          exit 1
        fi

        # Output All Variables
        echo "fallback-branch-name=${fallbackBranchName}" >> $GITHUB_OUTPUT
        echo "short-commit-hash=${shortCommitHash}" >> $GITHUB_OUTPUT
        echo "status-message=${statusMessage}" >> $GITHUB_OUTPUT

    - name: Construct Slack payload
      id: slack-payload
      if: ${{ inputs.payload == '' }}
      shell: bash
      run: |
        if [ -n "${{ inputs.additional-blocks }}" ]; then
          ADDITIONAL_BLOCKS=", ${{ inputs.additional-blocks }}"
        else
          ADDITIONAL_BLOCKS=""
        fi

        PAYLOAD=$(cat << EOF
        {
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "${{ inputs.header || github.workflow }}",
                "emoji": true
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "${{ steps.slack-variables.outputs.status-message }}"
              }
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Repository:*\n<${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Branch:*\n<${{ github.server_url }}/${{ github.repository }}/tree/${{ github.head_ref || steps.slack-variables.outputs.fallback-branch-name }}|${{ github.head_ref || steps.slack-variables.outputs.fallback-branch-name }}>"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Workflow Run:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.run_number }}>"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Commit:*\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ steps.slack-variables.outputs.short-commit-hash }}>"
                }
              ]
            },
            {
              "type": "actions",
              "elements": [
                {
                  "type": "button",
                  "action_id": "view-workflow-run",
                  "style": "${{ inputs.status == 'failure' && 'danger' || 'primary' }}",
                  "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                  "text": {
                    "type": "plain_text",
                    "emoji": true,
                    "text": "${{ inputs.status == 'failure' && 'View failed run' || 'View workflow run' }}"
                  }
                }
              ]
            }
            $ADDITIONAL_BLOCKS
          ]
        }
        EOF
        )
        echo "payload<<EOF" >> $GITHUB_OUTPUT
        echo "$PAYLOAD" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Send notification
      uses: slackapi/slack-github-action@v1
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack-webhook-url }}
        SLACK_WEBHOOK_TYPE: 'INCOMING_WEBHOOK'
      with:
        payload: ${{ inputs.payload != '' && inputs.payload || steps.slack-payload.outputs.payload }}
