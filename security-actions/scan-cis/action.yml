name: 'Legitify CIS GitHub Scan'
description: 'Run Legitify CIS compliance scan on GitHub repositories'
author: 'Kong'

inputs:
  fail_on_findings:
    description: 'Fail job if Legitify detects CIS compliance issues'
    required: false
    default: 'false'
  upload_code_scanning:
    description: 'Upload results to GitHub Code Scanning'
    required: false
    default: 'true'
  scorecard:
    description: 'Enable OpenSSF Scorecard integration'
    required: false
    default: 'no'
  repositories:
    description: 'Comma-separated list of repositories to scan (defaults to current repository)'
    required: false
    default: ''
  artifact_name:
    description: 'Name for the artifact containing scan results'
    required: false
    default: 'legitify-cis-scan-results'
  github_token:
    description: 'GitHub token with appropriate permissions for Legitify scan'
    required: true


runs:
  using: 'composite'
  steps:
    - name: Set debug logging for Legitify
      shell: bash
      run: |
        if [[ "$ACTIONS_STEP_DEBUG" == "true" ]]; then
          echo "LEGITIFY_DEBUG=true" >> $GITHUB_ENV
          echo "::notice::Debug logging enabled for Legitify scan"
        else
          echo "LEGITIFY_DEBUG=false" >> $GITHUB_ENV
        fi

    - name: Run Legitify CIS Scan
      id: legitify-scan
      uses: Legit-Labs/legitify@038aa49473a6974a3ef79f6c76b949b689d23282
      continue-on-error: true
      with:
        github_token: ${{ inputs.github_token }}
        upload_code_scanning: ${{ inputs.upload_code_scanning }}
        scorecard: ${{ inputs.scorecard }}
        repositories: ${{ inputs.repositories }}
        artifact_name: ${{ inputs.artifact_name }}

    - name: Check scan results
      shell: bash
      run: |
        if [[ "${{ steps.legitify-scan.outcome }}" == "failure" ]]; then
          echo "::warning::Legitify CIS scan detected compliance issues"
          echo "SCAN_FAILED=true" >> $GITHUB_ENV
        else
          echo "::notice::Legitify CIS scan completed successfully"
          echo "SCAN_FAILED=false" >> $GITHUB_ENV
        fi

    - name: Fail on CIS compliance issues
      if: ${{ always() && inputs.fail_on_findings == 'true' && env.SCAN_FAILED == 'true' }}
      shell: bash
      run: |
        echo "::error::Legitify CIS scan detected compliance issues and fail_on_findings is enabled"
        echo "::error::Check the scan results artifact: ${{ inputs.artifact_name }}"
        exit 1

    - name: Summary
      if: always()
      shell: bash
      run: |
        echo "## Legitify CIS Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Repository scanned:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "**Scan status:** ${{ steps.legitify-scan.outcome }}" >> $GITHUB_STEP_SUMMARY
        echo "**Artifact name:** ${{ inputs.artifact_name }}" >> $GITHUB_STEP_SUMMARY
        if [[ "${{ env.SCAN_FAILED }}" == "true" ]]; then
          echo "**Result:** ⚠️ Compliance issues detected" >> $GITHUB_STEP_SUMMARY
        else
          echo "**Result:** ✅ No compliance issues found" >> $GITHUB_STEP_SUMMARY
        fi